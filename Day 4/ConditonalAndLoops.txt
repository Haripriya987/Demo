----- Relational and Logical Opeartors----
These operators can give the result as a boolean values that means either true or false.
Relational Opeartors
<   LessThan
<= Lessthan equal to
>   Greater than
>=  greaterthan or equal to
==   equalto
!=    Not Equalto

//Sample program
public class Day5{
     public static void main(String args[]){
      int a=3,b=5;
      System.out.println(a>b);
     }
}
//false

 Logical Operators .
&&   Logical AND  -If all the conditions are true then it is true.
||     Logical OR   -If any one of the condition is true then only it is true
!        Logical NOT

//sample program
public class Day5{
     public static void main(String args[]){
      int a=3,b=5,c=8;
      System.out.println(a<b  &&  c>b);
     }
}
//true


 Set of statements which are executed based on conditions called as Conditional Statements.
  There are different conditional statements used in java
if-else
nested if 
if-elseif-else ladder
switch case

1)syntax of if-else
if(condition){
//statements
}
else{
//statements
}
Here if condition is true then it will display the statements in if block otherwise it will display the else block statements.
we can also writeif without else.

import java.util.Scanner;
public class Day5{
     public static void main(String args[]){
      Scanner in=new Scanner(System.in);
      int a=in.nextInt();
     if(a>0){
        System.out.println("Number is positive");
        }
      else{
         System.out.println("Number is Negative");
       }
     }
}

//6
Number is positive
-8
Number is Negative

2)nested-if-else
//sample program
import java.util.Scanner;
public class Day5{
     public static void main(String args[]){
      Scanner in=new Scanner(System.in);
      System.out.println("Enter 3 Numbers");
      int a=in.nextInt();
      int b=in.nextInt();
      int c=in.nextInt();
     if(a>b){
	if(a>c){
        System.out.println("A is Big");
           }
        }
      else{
	 if(b>c){
	  System.out.println("B is big");
	}
	else{
	System.out.println("C is big");
	}
       }
     }
}
//Enter 3 Numbers
4 9 6
B is big

3)if-elseif-else ladder
It is similar to nested-if but with a slight variation 
import java.util.Scanner;
public class Day5{
     public static void main(String args[]){
      Scanner in=new Scanner(System.in);
      System.out.println("Enter 3 Numbers");
      int a=in.nextInt();
      int b=in.nextInt();
      int c=in.nextInt();
     if(a>b  &&  a>c){
	System.out.println("A is Big");
      }
       else if(b>c){
               System.out.println("B is big");
          }
      else{
	System.out.println("C is big");
         }		       
     }
}

//Enter 3 Numbers
13 45 68
C is big


//some challenges
a)Find the radix of a number given in a string
import java.util.Scanner;
public class Day5{
     public static void main(String args[]){
      Scanner in=new Scanner(System.in);
      System.out.println("enter a No");
       String num=in.nextLine();
       if(num.matches("[01]+")){
           System.out.println("Binary Radix=2");
	}
        else if(num.matches("[0-7]+")){
           System.out.println("Octal Radix=8");
	}
        else if(num.matches("[0-9]+")){
           System.out.println("Decimal Radix=10");
	}
          else if(num.matches("[0-9A-Fa-f]+")){
           System.out.println("HexaDecimal Radix=16");
	}
	else{
           System.out.println("It is not a Number");
	}
    }
}

//enter a No
7564
Octal Radix=8

enter a No
245f
HexaDecimal Radix=16

enter a No
100011111111111
Binary Radix=2

enter a No
esheet455
It is not a Number

b)find a given year is leap year or not
import java.util.Scanner;
public class Day5{
     public static void main(String args[]){
      Scanner in=new Scanner(System.in);
      System.out.println("enter a No");
         int year=in.nextInt();
        if((year%4==0)&&(year%100!=0 ||  year%400==0)){
	System.out.println("It is  a Leap Year");
	}
	else{
	System.out.println("Not a Leap Year");
	}      		       
     }
}
//enter a No
106
Not a Leap Year
enter a No
2016
It is  a Leap Year
enter a No
600
Not a Leap Year
enter a No
2024
It is  a Leap Year

4)switch
//Syntax of switch
switch(option)
{
case 1:System.out.println("Case 1");
	break;
case 2:System.out.println("Case 1");
 	break;

default:System.out.println("None");
	break;
}
switch cases are mainly used for menu-driven programs
It is much faster.
If break is not given it fall through all the remaining cases
float values are not allowed in case values.
byte,short,int,char,String are allowed as case values.
for char it is kept as 'a','A'....etc
For String it is enclosed in double quotes "Option1";

//Sample Programs
import java.util.Scanner;
public class Test{
  public static void main(String args[]){
    Scanner in=new Scanner(System.in);
     System.out.println("Enter a Number");
       int  n=in.nextInt();
         switch(n){
         case 1:System.out.println("Sunday");
                      break;
        case 2:System.out.println("Monday");
                      break;
         case 3:System.out.println("Tuesday");
                      break;
         case 4:System.out.println("Wednesday");
                      break;
         case 5:System.out.println("Thursday");
                      break;
        case 6:System.out.println("friday");
                      break;
         case 7:System.out.println("Saturday");
                      break;
        default:System.out.println("Invalid number");
	   break;
	}
}
}
//Enter a Number
5
Thursday

 
----------------------------------------------------------------------------------------------------------------------------
---Loops----
Loops are repeating statements. 
There are four types of loops. 
In loops the steps are repeated till the given condition is reached. 
WHILE, DO.....WHILE LOOP 
While loop: !syntax:
      while(condition)      
                  {                            
	 ----------         
                    ----------         
               }
 Example program 
The steps are executed if the condition is true. 
The condition is checked first and the process is followed. 
It is a pre-tested loop 
If the condition is false then the process is never executed. 
 class Test {   
 Public static void main(string args[])    
{     
 int i=1,n=100;   
   while(i<n)    
  {   
     System.out.println(i);  
      i=i*2; 
     }   
 }
 }
Do...while loop
!syntax:          
 do                         
    {                            
       ------                                  
        ------ 
}while(condition) ;

 class test {
   public static void main(string args[])
   {   
  int i=1,n=100; 
    do     {
        System.out.println(i);      
        i=i*2;    
 }while(i<n);
First the process is followed and then the condition is checked. 
It is a post-tested loop. 
If the condition is false then the process is executed atleast once. 
The both loops work for the same purpose. 
But do....while loop is more suitable than while loop. 
For loop: 
For loop is a counter controlled loop.
 It is the most frequently used loop. 
Syntax:    
 for(initialization; condition; updation)        
         {                    
	    ------                    
	   -------                
 }
 class test { 
  public static void main(string args[])   { 
    for(int i=1;i<=10;i++)  
   {      
 System.out.println(i);   
  }
   } }

At first step a variable is initialised. 
At next step the condition Is checked. 
At third step the body is executed. 
At fourth step the updation is done. 

//challenges
1)Multiplication table
import java.util.Scanner;
public class Test{
public static void main(String args[]){
 Scanner in=new Scanner(System.in);
System.out.println("Enter a number");
int n=in.nextInt();
 for(int i=1;i<=10;i++){
System.out.println(n+"x"+i+"="+n*i);
 	}
    }
}
	
//Enter a number
5
5x1=5
5x2=10
5x3=15
5x4=20
5x5=25
5x6=30
5x7=35
5x8=40
5x9=45
5x10=50

2)Sum of Numbers upto n

import java.util.Scanner;
public class Test{
public static void main(String args[]){
 Scanner in=new Scanner(System.in);
System.out.println("Enter a number");
int n=in.nextInt();
int sum=0;
 for(int i=0;i<=n;i++){
	sum=sum+i;

	}
System.out.println("sum"+" "+sum);
     }
}
//Enter a number
10
sum 55

3)Factorial of a number:
import java.util.Scanner;
public class Test{
public static void main(String args[]){
 Scanner in=new Scanner(System.in);
System.out.println("Enter a number");
int n=in.nextInt();
int fact=1;
 for(int i=1;i<=n;i++){
	fact=fact*i;
	}
System.out.println("fact"+" "+fact);
     }
}
//Enter a number
5
fact 120

4)Display Digits of a number
import java.util.Scanner;
public class Test{
public static void main(String args[]){
 Scanner in=new Scanner(System.in);
System.out.println("Enter a number");
int n=in.nextInt();
int r=0;
while(n>0)
{
r=n%10;
n=n/10;
System.out.println(r);
}

     }
}

//Enter a number
5698

8
9
6
5

5)Count the digits of a number
import java.util.Scanner;
public class Test{
public static void main(String args[]){
 Scanner in=new Scanner(System.in);
System.out.println("Enter a number");
int n=in.nextInt();
int count=0;
while(n>0){
	n=n/10;
	count++;
	}
System.out.println("count:"+count);
     }
}

//Enter a number
8756
count:4

6)Finding a Number is Armstrong no or not
import java.util.Scanner;
public class Test{
public static void main(String args[]){
 Scanner in=new Scanner(System.in);
System.out.println("Enter a number");
int n=in.nextInt();
int m=n;
int sum=0;
while(n>0){
	int r=n%10;
	sum=sum+r*r*r;
	n=n/10;
	}
if(sum==m)
System.out.println("it  is Armstrong number");
else
System.out.println("it is not  Armstrong number");
     }
}

//Enter a number
153
it  is Armstrong number

Enter a number
457
it is not  Armstrong number

7)Display a number in words even with tailing zero

import java.util.Scanner;
public class Test{
public static void main(String args[]){
 Scanner in=new Scanner(System.in);
System.out.println("Enter a number");
int n=in.nextInt();
int r;
String str="";
while(n>0)
{ 
  r=n%10;
  n=n/10;
str=str+r;
}
char c;
for(int i=str.length()-1;i>=0;i--)
{
c=str.charAt(i);
switch(c){
 case '0':System.out.print("zero ");
	break;
case '1':System.out.print("one ");
	break;
case '2':System.out.print("two ");
	break;
case '3':System.out.print("Three ");
	break;
case '4':System.out.print(" Four ");
	break;
case '5':System.out.print("Five ");
	break;
case '6':System.out.print("Six ");
	break;
case '7':System.out.print("seven ");
	break;
case '8':System.out.print("eight ");
	break;
case '9':System.out.print(" nine");
	break;

}
}
   }
}

//Enter a number
7689
seven six eight  nine
Enter a number
4000
 Four zero zero zero


Nested loop: 
For loop inside a for loop is he example of nested loop.  
The above one is used commonly. 
The working of the body is more than one dimensional. 
Nesting of any two types of loops can be done. 
Nested for loop may create the dimensional loops. 
Example program for nested for loop


//Pattern Programs
public class Test{
public static void main(String args[]){

for(int i=1;i<=5;i++){
    for(int j=1;j<=5;j++){
	System.out.print("("+i+","+j+")");
          }
	System.out.println();
       }
    }
}

(1,1)(1,2)(1,3)(1,4)(1,5)
(2,1)(2,2)(2,3)(2,4)(2,5)
(3,1)(3,2)(3,3)(3,4)(3,5)
(4,1)(4,2)(4,3)(4,4)(4,5)
(5,1)(5,2)(5,3)(5,4)(5,5)


2)public class Test{
public static void main(String args[]){

for(int i=1;i<=5;i++){
    for(int j=1;j<=5;j++){
	System.out.print(j+" ");
          }
	System.out.println();
       }
    }
}


1 2 3 4 5
1 2 3 4 5
1 2 3 4 5
1 2 3 4 5
1 2 3 4 5

3)public class Test{
public static void main(String args[]){

for(int i=1;i<=5;i++){
    for(int j=1;j<=5;j++){
	System.out.print(i+" ");
          }
	System.out.println();
       }
    }
}
//
1 1 1 1 1
2 2 2 2 2
3 3 3 3 3
4 4 4 4 4
5 5 5 5 5

4)
public class Test{
public static void main(String args[]){

for(int i=1;i<=5;i++){
    for(int j=1;j<=5;j++){
	System.out.print(i+j+" ");
          }
	System.out.println();
       }
    }
}
//
2 3 4 5 6
3 4 5 6 7
4 5 6 7 8
5 6 7 8 9
6 7 8 9 10

5)
public class Test{
public static void main(String args[]){
int count=0;
for(int i=1;i<=5;i++){
    for(int j=1;j<=5;j++){
	count++;
	System.out.format(" %02d",count);
          }
	System.out.println();
       }
    }
}
//
 01 02 03 04 05
 06 07 08 09 10
 11 12 13 14 15
 16 17 18 19 20
 21 22 23 24 25

5)
public class Test{
public static void main(String args[]){
for(int i=1;i<=5;i++){
   for(int j=1;j<=i;j++){
      System.out.print(j+" ");
	}
System.out.println();
}
}
}
//
1
12
123
1234
12345

6)public class Test{
public static void main(String args[]){
for(int i=1;i<=5;i++){
    for(int j=1;j<=5-i+1;j++){

	System.out.print(j+"");
          }
	System.out.println();
       }
    }
}
//
12345
1234
123
12
1
